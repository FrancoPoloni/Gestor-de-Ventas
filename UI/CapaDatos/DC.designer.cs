#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Trabajo")]
	public partial class DCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InserteCliente(eCliente instance);
    partial void UpdateeCliente(eCliente instance);
    partial void DeleteeCliente(eCliente instance);
    partial void InserteCompra(eCompra instance);
    partial void UpdateeCompra(eCompra instance);
    partial void DeleteeCompra(eCompra instance);
    partial void InserteProducto(eProducto instance);
    partial void UpdateeProducto(eProducto instance);
    partial void DeleteeProducto(eProducto instance);
    partial void InserteTipoDocumento(eTipoDocumento instance);
    partial void UpdateeTipoDocumento(eTipoDocumento instance);
    partial void DeleteeTipoDocumento(eTipoDocumento instance);
    partial void InserteDetalle_Compra(eDetalle_Compra instance);
    partial void UpdateeDetalle_Compra(eDetalle_Compra instance);
    partial void DeleteeDetalle_Compra(eDetalle_Compra instance);
    partial void InserteDetalle_Venta(eDetalle_Venta instance);
    partial void UpdateeDetalle_Venta(eDetalle_Venta instance);
    partial void DeleteeDetalle_Venta(eDetalle_Venta instance);
    partial void InserteMarca(eMarca instance);
    partial void UpdateeMarca(eMarca instance);
    partial void DeleteeMarca(eMarca instance);
    partial void InserteTipoProducto(eTipoProducto instance);
    partial void UpdateeTipoProducto(eTipoProducto instance);
    partial void DeleteeTipoProducto(eTipoProducto instance);
    partial void InserteVenta(eVenta instance);
    partial void UpdateeVenta(eVenta instance);
    partial void DeleteeVenta(eVenta instance);
    partial void InserteProveedor(eProveedor instance);
    partial void UpdateeProveedor(eProveedor instance);
    partial void DeleteeProveedor(eProveedor instance);
    #endregion
		
		public DCDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.TrabajoConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<eCliente> eCliente
		{
			get
			{
				return this.GetTable<eCliente>();
			}
		}
		
		public System.Data.Linq.Table<eCompra> eCompra
		{
			get
			{
				return this.GetTable<eCompra>();
			}
		}
		
		public System.Data.Linq.Table<eProducto> eProducto
		{
			get
			{
				return this.GetTable<eProducto>();
			}
		}
		
		public System.Data.Linq.Table<eTipoDocumento> eTipoDocumento
		{
			get
			{
				return this.GetTable<eTipoDocumento>();
			}
		}
		
		public System.Data.Linq.Table<eDetalle_Compra> eDetalle_Compra
		{
			get
			{
				return this.GetTable<eDetalle_Compra>();
			}
		}
		
		public System.Data.Linq.Table<eDetalle_Venta> eDetalle_Venta
		{
			get
			{
				return this.GetTable<eDetalle_Venta>();
			}
		}
		
		public System.Data.Linq.Table<eMarca> eMarca
		{
			get
			{
				return this.GetTable<eMarca>();
			}
		}
		
		public System.Data.Linq.Table<eTipoProducto> eTipoProducto
		{
			get
			{
				return this.GetTable<eTipoProducto>();
			}
		}
		
		public System.Data.Linq.Table<eVenta> eVenta
		{
			get
			{
				return this.GetTable<eVenta>();
			}
		}
		
		public System.Data.Linq.Table<eProveedor> eProveedor
		{
			get
			{
				return this.GetTable<eProveedor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cliente")]
	public partial class eCliente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private int _fkDoc;
		
		private int _numdoc;
		
		private EntitySet<eVenta> _Venta;
		
		private EntityRef<eTipoDocumento> _TipoDocumento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OnfkDocChanging(int value);
    partial void OnfkDocChanged();
    partial void OnnumdocChanging(int value);
    partial void OnnumdocChanged();
    #endregion
		
		public eCliente()
		{
			this._Venta = new EntitySet<eVenta>(new Action<eVenta>(this.attach_Venta), new Action<eVenta>(this.detach_Venta));
			this._TipoDocumento = default(EntityRef<eTipoDocumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50)")]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkDoc", DbType="Int NOT NULL")]
		public int fkDoc
		{
			get
			{
				return this._fkDoc;
			}
			set
			{
				if ((this._fkDoc != value))
				{
					if (this._TipoDocumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkDocChanging(value);
					this.SendPropertyChanging();
					this._fkDoc = value;
					this.SendPropertyChanged("fkDoc");
					this.OnfkDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numdoc", DbType="Int NOT NULL")]
		public int numdoc
		{
			get
			{
				return this._numdoc;
			}
			set
			{
				if ((this._numdoc != value))
				{
					this.OnnumdocChanging(value);
					this.SendPropertyChanging();
					this._numdoc = value;
					this.SendPropertyChanged("numdoc");
					this.OnnumdocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Venta", ThisKey="id", OtherKey="fkCliente")]
		public EntitySet<eVenta> eVenta
		{
			get
			{
				return this._Venta;
			}
			set
			{
				this._Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Cliente", Storage="_TipoDocumento", ThisKey="fkDoc", OtherKey="id", IsForeignKey=true)]
		public eTipoDocumento eTipoDocumento
		{
			get
			{
				return this._TipoDocumento.Entity;
			}
			set
			{
				eTipoDocumento previousValue = this._TipoDocumento.Entity;
				if (((previousValue != value) 
							|| (this._TipoDocumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDocumento.Entity = null;
						previousValue.eCliente.Remove(this);
					}
					this._TipoDocumento.Entity = value;
					if ((value != null))
					{
						value.eCliente.Add(this);
						this._fkDoc = value.id;
					}
					else
					{
						this._fkDoc = default(int);
					}
					this.SendPropertyChanged("eTipoDocumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Venta(eVenta entity)
		{
			this.SendPropertyChanging();
			entity.eCliente = this;
		}
		
		private void detach_Venta(eVenta entity)
		{
			this.SendPropertyChanging();
			entity.eCliente = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Compra")]
	public partial class eCompra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fkProvee;
		
		private System.DateTime _fecha;
		
		private double _total;
		
		private EntitySet<eDetalle_Compra> _Detalle_Compra;
		
		private EntityRef<eProveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfkProveeChanging(int value);
    partial void OnfkProveeChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OntotalChanging(double value);
    partial void OntotalChanged();
    #endregion
		
		public eCompra()
		{
			this._Detalle_Compra = new EntitySet<eDetalle_Compra>(new Action<eDetalle_Compra>(this.attach_Detalle_Compra), new Action<eDetalle_Compra>(this.detach_Detalle_Compra));
			this._Proveedor = default(EntityRef<eProveedor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkProvee", DbType="Int NOT NULL")]
		public int fkProvee
		{
			get
			{
				return this._fkProvee;
			}
			set
			{
				if ((this._fkProvee != value))
				{
					if (this._Proveedor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkProveeChanging(value);
					this.SendPropertyChanging();
					this._fkProvee = value;
					this.SendPropertyChanged("fkProvee");
					this.OnfkProveeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float NOT NULL")]
		public double total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_Detalle_Compra", Storage="_Detalle_Compra", ThisKey="id", OtherKey="fkCompra")]
		public EntitySet<eDetalle_Compra> eDetalle_Compra
		{
			get
			{
				return this._Detalle_Compra;
			}
			set
			{
				this._Detalle_Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Compra", Storage="_Proveedor", ThisKey="fkProvee", OtherKey="id", IsForeignKey=true)]
		public eProveedor eProveedor
		{
			get
			{
				return this._Proveedor.Entity;
			}
			set
			{
				eProveedor previousValue = this._Proveedor.Entity;
				if (((previousValue != value) 
							|| (this._Proveedor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Proveedor.Entity = null;
						previousValue.eCompra.Remove(this);
					}
					this._Proveedor.Entity = value;
					if ((value != null))
					{
						value.eCompra.Add(this);
						this._fkProvee = value.id;
					}
					else
					{
						this._fkProvee = default(int);
					}
					this.SendPropertyChanged("eProveedor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_Compra(eDetalle_Compra entity)
		{
			this.SendPropertyChanging();
			entity.eCompra = this;
		}
		
		private void detach_Detalle_Compra(eDetalle_Compra entity)
		{
			this.SendPropertyChanging();
			entity.eCompra = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Producto")]
	public partial class eProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private double _precio;
		
		private int _fkTipo;
		
		private int _fkmarca;
		
		private EntitySet<eDetalle_Compra> _Detalle_Compra;
		
		private EntitySet<eDetalle_Venta> _Detalle_Venta;
		
		private EntityRef<eMarca> _Marca;
		
		private EntityRef<eTipoProducto> _TipoProducto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnprecioChanging(double value);
    partial void OnprecioChanged();
    partial void OnfkTipoChanging(int value);
    partial void OnfkTipoChanged();
    partial void OnfkmarcaChanging(int value);
    partial void OnfkmarcaChanged();
    #endregion
		
		public eProducto()
		{
			this._Detalle_Compra = new EntitySet<eDetalle_Compra>(new Action<eDetalle_Compra>(this.attach_Detalle_Compra), new Action<eDetalle_Compra>(this.detach_Detalle_Compra));
			this._Detalle_Venta = new EntitySet<eDetalle_Venta>(new Action<eDetalle_Venta>(this.attach_Detalle_Venta), new Action<eDetalle_Venta>(this.detach_Detalle_Venta));
			this._Marca = default(EntityRef<eMarca>);
			this._TipoProducto = default(EntityRef<eTipoProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precio", DbType="Float NOT NULL")]
		public double precio
		{
			get
			{
				return this._precio;
			}
			set
			{
				if ((this._precio != value))
				{
					this.OnprecioChanging(value);
					this.SendPropertyChanging();
					this._precio = value;
					this.SendPropertyChanged("precio");
					this.OnprecioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkTipo", DbType="Int NOT NULL")]
		public int fkTipo
		{
			get
			{
				return this._fkTipo;
			}
			set
			{
				if ((this._fkTipo != value))
				{
					if (this._TipoProducto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkTipoChanging(value);
					this.SendPropertyChanging();
					this._fkTipo = value;
					this.SendPropertyChanged("fkTipo");
					this.OnfkTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkmarca", DbType="Int NOT NULL")]
		public int fkmarca
		{
			get
			{
				return this._fkmarca;
			}
			set
			{
				if ((this._fkmarca != value))
				{
					if (this._Marca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkmarcaChanging(value);
					this.SendPropertyChanging();
					this._fkmarca = value;
					this.SendPropertyChanged("fkmarca");
					this.OnfkmarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Compra", Storage="_Detalle_Compra", ThisKey="id", OtherKey="fkProducto")]
		public EntitySet<eDetalle_Compra> eDetalle_Compra
		{
			get
			{
				return this._Detalle_Compra;
			}
			set
			{
				this._Detalle_Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Venta", Storage="_Detalle_Venta", ThisKey="id", OtherKey="fkProducto")]
		public EntitySet<eDetalle_Venta> eDetalle_Venta
		{
			get
			{
				return this._Detalle_Venta;
			}
			set
			{
				this._Detalle_Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Producto", Storage="_Marca", ThisKey="fkmarca", OtherKey="id", IsForeignKey=true)]
		public eMarca eMarca
		{
			get
			{
				return this._Marca.Entity;
			}
			set
			{
				eMarca previousValue = this._Marca.Entity;
				if (((previousValue != value) 
							|| (this._Marca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Marca.Entity = null;
						previousValue.eProducto.Remove(this);
					}
					this._Marca.Entity = value;
					if ((value != null))
					{
						value.eProducto.Add(this);
						this._fkmarca = value.id;
					}
					else
					{
						this._fkmarca = default(int);
					}
					this.SendPropertyChanged("eMarca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_TipoProducto", ThisKey="fkTipo", OtherKey="id", IsForeignKey=true)]
		public eTipoProducto eTipoProducto
		{
			get
			{
				return this._TipoProducto.Entity;
			}
			set
			{
				eTipoProducto previousValue = this._TipoProducto.Entity;
				if (((previousValue != value) 
							|| (this._TipoProducto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoProducto.Entity = null;
						previousValue.eProducto.Remove(this);
					}
					this._TipoProducto.Entity = value;
					if ((value != null))
					{
						value.eProducto.Add(this);
						this._fkTipo = value.id;
					}
					else
					{
						this._fkTipo = default(int);
					}
					this.SendPropertyChanged("eTipoProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_Compra(eDetalle_Compra entity)
		{
			this.SendPropertyChanging();
			entity.eProducto = this;
		}
		
		private void detach_Detalle_Compra(eDetalle_Compra entity)
		{
			this.SendPropertyChanging();
			entity.eProducto = null;
		}
		
		private void attach_Detalle_Venta(eDetalle_Venta entity)
		{
			this.SendPropertyChanging();
			entity.eProducto = this;
		}
		
		private void detach_Detalle_Venta(eDetalle_Venta entity)
		{
			this.SendPropertyChanging();
			entity.eProducto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoDocumento")]
	public partial class eTipoDocumento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<eCliente> _Cliente;
		
		private EntitySet<eProveedor> _Proveedor;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public eTipoDocumento()
		{
			this._Cliente = new EntitySet<eCliente>(new Action<eCliente>(this.attach_Cliente), new Action<eCliente>(this.detach_Cliente));
			this._Proveedor = new EntitySet<eProveedor>(new Action<eProveedor>(this.attach_Proveedor), new Action<eProveedor>(this.detach_Proveedor));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Cliente", Storage="_Cliente", ThisKey="id", OtherKey="fkDoc")]
		public EntitySet<eCliente> eCliente
		{
			get
			{
				return this._Cliente;
			}
			set
			{
				this._Cliente.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Proveedor", Storage="_Proveedor", ThisKey="id", OtherKey="fkDoc")]
		public EntitySet<eProveedor> eProveedor
		{
			get
			{
				return this._Proveedor;
			}
			set
			{
				this._Proveedor.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cliente(eCliente entity)
		{
			this.SendPropertyChanging();
			entity.eTipoDocumento = this;
		}
		
		private void detach_Cliente(eCliente entity)
		{
			this.SendPropertyChanging();
			entity.eTipoDocumento = null;
		}
		
		private void attach_Proveedor(eProveedor entity)
		{
			this.SendPropertyChanging();
			entity.eTipoDocumento = this;
		}
		
		private void detach_Proveedor(eProveedor entity)
		{
			this.SendPropertyChanging();
			entity.eTipoDocumento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle_Compra")]
	public partial class eDetalle_Compra : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fkCompra;
		
		private int _fkProducto;
		
		private int _cantidad;
		
		private double _precioUni;
		
		private EntityRef<eCompra> _Compra;
		
		private EntityRef<eProducto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfkCompraChanging(int value);
    partial void OnfkCompraChanged();
    partial void OnfkProductoChanging(int value);
    partial void OnfkProductoChanged();
    partial void OncantidadChanging(int value);
    partial void OncantidadChanged();
    partial void OnprecioUniChanging(double value);
    partial void OnprecioUniChanged();
    #endregion
		
		public eDetalle_Compra()
		{
			this._Compra = default(EntityRef<eCompra>);
			this._Producto = default(EntityRef<eProducto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkCompra", DbType="Int NOT NULL")]
		public int fkCompra
		{
			get
			{
				return this._fkCompra;
			}
			set
			{
				if ((this._fkCompra != value))
				{
					if (this._Compra.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkCompraChanging(value);
					this.SendPropertyChanging();
					this._fkCompra = value;
					this.SendPropertyChanged("fkCompra");
					this.OnfkCompraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkProducto", DbType="Int NOT NULL")]
		public int fkProducto
		{
			get
			{
				return this._fkProducto;
			}
			set
			{
				if ((this._fkProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkProductoChanging(value);
					this.SendPropertyChanging();
					this._fkProducto = value;
					this.SendPropertyChanged("fkProducto");
					this.OnfkProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precioUni", DbType="Float NOT NULL")]
		public double precioUni
		{
			get
			{
				return this._precioUni;
			}
			set
			{
				if ((this._precioUni != value))
				{
					this.OnprecioUniChanging(value);
					this.SendPropertyChanging();
					this._precioUni = value;
					this.SendPropertyChanged("precioUni");
					this.OnprecioUniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Compra_Detalle_Compra", Storage="_Compra", ThisKey="fkCompra", OtherKey="id", IsForeignKey=true)]
		public eCompra eCompra
		{
			get
			{
				return this._Compra.Entity;
			}
			set
			{
				eCompra previousValue = this._Compra.Entity;
				if (((previousValue != value) 
							|| (this._Compra.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Compra.Entity = null;
						previousValue.eDetalle_Compra.Remove(this);
					}
					this._Compra.Entity = value;
					if ((value != null))
					{
						value.eDetalle_Compra.Add(this);
						this._fkCompra = value.id;
					}
					else
					{
						this._fkCompra = default(int);
					}
					this.SendPropertyChanged("eCompra");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Compra", Storage="_Producto", ThisKey="fkProducto", OtherKey="id", IsForeignKey=true)]
		public eProducto eProducto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				eProducto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.eDetalle_Compra.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.eDetalle_Compra.Add(this);
						this._fkProducto = value.id;
					}
					else
					{
						this._fkProducto = default(int);
					}
					this.SendPropertyChanged("eProducto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Detalle_Venta")]
	public partial class eDetalle_Venta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fkProducto;
		
		private int _fkVenta;
		
		private int _cantidad;
		
		private double _precioUni;
		
		private EntityRef<eProducto> _Producto;
		
		private EntityRef<eVenta> _Venta;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfkProductoChanging(int value);
    partial void OnfkProductoChanged();
    partial void OnfkVentaChanging(int value);
    partial void OnfkVentaChanged();
    partial void OncantidadChanging(int value);
    partial void OncantidadChanged();
    partial void OnprecioUniChanging(double value);
    partial void OnprecioUniChanged();
    #endregion
		
		public eDetalle_Venta()
		{
			this._Producto = default(EntityRef<eProducto>);
			this._Venta = default(EntityRef<eVenta>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkProducto", DbType="Int NOT NULL")]
		public int fkProducto
		{
			get
			{
				return this._fkProducto;
			}
			set
			{
				if ((this._fkProducto != value))
				{
					if (this._Producto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkProductoChanging(value);
					this.SendPropertyChanging();
					this._fkProducto = value;
					this.SendPropertyChanged("fkProducto");
					this.OnfkProductoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkVenta", DbType="Int NOT NULL")]
		public int fkVenta
		{
			get
			{
				return this._fkVenta;
			}
			set
			{
				if ((this._fkVenta != value))
				{
					if (this._Venta.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkVentaChanging(value);
					this.SendPropertyChanging();
					this._fkVenta = value;
					this.SendPropertyChanged("fkVenta");
					this.OnfkVentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantidad", DbType="Int NOT NULL")]
		public int cantidad
		{
			get
			{
				return this._cantidad;
			}
			set
			{
				if ((this._cantidad != value))
				{
					this.OncantidadChanging(value);
					this.SendPropertyChanging();
					this._cantidad = value;
					this.SendPropertyChanged("cantidad");
					this.OncantidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_precioUni", DbType="Float NOT NULL")]
		public double precioUni
		{
			get
			{
				return this._precioUni;
			}
			set
			{
				if ((this._precioUni != value))
				{
					this.OnprecioUniChanging(value);
					this.SendPropertyChanging();
					this._precioUni = value;
					this.SendPropertyChanged("precioUni");
					this.OnprecioUniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Producto_Detalle_Venta", Storage="_Producto", ThisKey="fkProducto", OtherKey="id", IsForeignKey=true)]
		public eProducto eProducto
		{
			get
			{
				return this._Producto.Entity;
			}
			set
			{
				eProducto previousValue = this._Producto.Entity;
				if (((previousValue != value) 
							|| (this._Producto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Producto.Entity = null;
						previousValue.eDetalle_Venta.Remove(this);
					}
					this._Producto.Entity = value;
					if ((value != null))
					{
						value.eDetalle_Venta.Add(this);
						this._fkProducto = value.id;
					}
					else
					{
						this._fkProducto = default(int);
					}
					this.SendPropertyChanged("eProducto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_Detalle_Venta", Storage="_Venta", ThisKey="fkVenta", OtherKey="id", IsForeignKey=true)]
		public eVenta eVenta
		{
			get
			{
				return this._Venta.Entity;
			}
			set
			{
				eVenta previousValue = this._Venta.Entity;
				if (((previousValue != value) 
							|| (this._Venta.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Venta.Entity = null;
						previousValue.eDetalle_Venta.Remove(this);
					}
					this._Venta.Entity = value;
					if ((value != null))
					{
						value.eDetalle_Venta.Add(this);
						this._fkVenta = value.id;
					}
					else
					{
						this._fkVenta = default(int);
					}
					this.SendPropertyChanged("eVenta");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class eMarca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<eProducto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public eMarca()
		{
			this._Producto = new EntitySet<eProducto>(new Action<eProducto>(this.attach_Producto), new Action<eProducto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Marca_Producto", Storage="_Producto", ThisKey="id", OtherKey="fkmarca")]
		public EntitySet<eProducto> eProducto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(eProducto entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = this;
		}
		
		private void detach_Producto(eProducto entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipoProducto")]
	public partial class eTipoProducto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<eProducto> _Producto;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public eTipoProducto()
		{
			this._Producto = new EntitySet<eProducto>(new Action<eProducto>(this.attach_Producto), new Action<eProducto>(this.detach_Producto));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoProducto_Producto", Storage="_Producto", ThisKey="id", OtherKey="fkTipo")]
		public EntitySet<eProducto> eProducto
		{
			get
			{
				return this._Producto;
			}
			set
			{
				this._Producto.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Producto(eProducto entity)
		{
			this.SendPropertyChanging();
			entity.eTipoProducto = this;
		}
		
		private void detach_Producto(eProducto entity)
		{
			this.SendPropertyChanging();
			entity.eTipoProducto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Venta")]
	public partial class eVenta : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.DateTime _fecha;
		
		private double _total;
		
		private int _fkCliente;
		
		private EntitySet<eDetalle_Venta> _Detalle_Venta;
		
		private EntityRef<eCliente> _Cliente;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnfechaChanging(System.DateTime value);
    partial void OnfechaChanged();
    partial void OntotalChanging(double value);
    partial void OntotalChanged();
    partial void OnfkClienteChanging(int value);
    partial void OnfkClienteChanged();
    #endregion
		
		public eVenta()
		{
			this._Detalle_Venta = new EntitySet<eDetalle_Venta>(new Action<eDetalle_Venta>(this.attach_Detalle_Venta), new Action<eDetalle_Venta>(this.detach_Detalle_Venta));
			this._Cliente = default(EntityRef<eCliente>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fecha", DbType="DateTime NOT NULL")]
		public System.DateTime fecha
		{
			get
			{
				return this._fecha;
			}
			set
			{
				if ((this._fecha != value))
				{
					this.OnfechaChanging(value);
					this.SendPropertyChanging();
					this._fecha = value;
					this.SendPropertyChanged("fecha");
					this.OnfechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float NOT NULL")]
		public double total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkCliente", DbType="Int NOT NULL")]
		public int fkCliente
		{
			get
			{
				return this._fkCliente;
			}
			set
			{
				if ((this._fkCliente != value))
				{
					if (this._Cliente.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkClienteChanging(value);
					this.SendPropertyChanging();
					this._fkCliente = value;
					this.SendPropertyChanged("fkCliente");
					this.OnfkClienteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Venta_Detalle_Venta", Storage="_Detalle_Venta", ThisKey="id", OtherKey="fkVenta")]
		public EntitySet<eDetalle_Venta> eDetalle_Venta
		{
			get
			{
				return this._Detalle_Venta;
			}
			set
			{
				this._Detalle_Venta.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cliente_Venta", Storage="_Cliente", ThisKey="fkCliente", OtherKey="id", IsForeignKey=true)]
		public eCliente eCliente
		{
			get
			{
				return this._Cliente.Entity;
			}
			set
			{
				eCliente previousValue = this._Cliente.Entity;
				if (((previousValue != value) 
							|| (this._Cliente.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cliente.Entity = null;
						previousValue.eVenta.Remove(this);
					}
					this._Cliente.Entity = value;
					if ((value != null))
					{
						value.eVenta.Add(this);
						this._fkCliente = value.id;
					}
					else
					{
						this._fkCliente = default(int);
					}
					this.SendPropertyChanged("eCliente");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Detalle_Venta(eDetalle_Venta entity)
		{
			this.SendPropertyChanging();
			entity.eVenta = this;
		}
		
		private void detach_Detalle_Venta(eDetalle_Venta entity)
		{
			this.SendPropertyChanging();
			entity.eVenta = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Proveedor")]
	public partial class eProveedor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private string _apellido;
		
		private int _telefono;
		
		private string _gmail;
		
		private int _fkDoc;
		
		private int _numDoc;
		
		private EntitySet<eCompra> _Compra;
		
		private EntityRef<eTipoDocumento> _TipoDocumento;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    partial void OnapellidoChanging(string value);
    partial void OnapellidoChanged();
    partial void OntelefonoChanging(int value);
    partial void OntelefonoChanged();
    partial void OngmailChanging(string value);
    partial void OngmailChanged();
    partial void OnfkDocChanging(int value);
    partial void OnfkDocChanged();
    partial void OnnumDocChanging(int value);
    partial void OnnumDocChanged();
    #endregion
		
		public eProveedor()
		{
			this._Compra = new EntitySet<eCompra>(new Action<eCompra>(this.attach_Compra), new Action<eCompra>(this.detach_Compra));
			this._TipoDocumento = default(EntityRef<eTipoDocumento>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(50)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apellido", DbType="VarChar(50)")]
		public string apellido
		{
			get
			{
				return this._apellido;
			}
			set
			{
				if ((this._apellido != value))
				{
					this.OnapellidoChanging(value);
					this.SendPropertyChanging();
					this._apellido = value;
					this.SendPropertyChanged("apellido");
					this.OnapellidoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefono", DbType="Int NOT NULL")]
		public int telefono
		{
			get
			{
				return this._telefono;
			}
			set
			{
				if ((this._telefono != value))
				{
					this.OntelefonoChanging(value);
					this.SendPropertyChanging();
					this._telefono = value;
					this.SendPropertyChanged("telefono");
					this.OntelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gmail", DbType="VarChar(50)")]
		public string gmail
		{
			get
			{
				return this._gmail;
			}
			set
			{
				if ((this._gmail != value))
				{
					this.OngmailChanging(value);
					this.SendPropertyChanging();
					this._gmail = value;
					this.SendPropertyChanged("gmail");
					this.OngmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fkDoc", DbType="Int NOT NULL")]
		public int fkDoc
		{
			get
			{
				return this._fkDoc;
			}
			set
			{
				if ((this._fkDoc != value))
				{
					if (this._TipoDocumento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfkDocChanging(value);
					this.SendPropertyChanging();
					this._fkDoc = value;
					this.SendPropertyChanged("fkDoc");
					this.OnfkDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numDoc", DbType="Int NOT NULL")]
		public int numDoc
		{
			get
			{
				return this._numDoc;
			}
			set
			{
				if ((this._numDoc != value))
				{
					this.OnnumDocChanging(value);
					this.SendPropertyChanging();
					this._numDoc = value;
					this.SendPropertyChanged("numDoc");
					this.OnnumDocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Proveedor_Compra", Storage="_Compra", ThisKey="id", OtherKey="fkProvee")]
		public EntitySet<eCompra> eCompra
		{
			get
			{
				return this._Compra;
			}
			set
			{
				this._Compra.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipoDocumento_Proveedor", Storage="_TipoDocumento", ThisKey="fkDoc", OtherKey="id", IsForeignKey=true)]
		public eTipoDocumento eTipoDocumento
		{
			get
			{
				return this._TipoDocumento.Entity;
			}
			set
			{
				eTipoDocumento previousValue = this._TipoDocumento.Entity;
				if (((previousValue != value) 
							|| (this._TipoDocumento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipoDocumento.Entity = null;
						previousValue.eProveedor.Remove(this);
					}
					this._TipoDocumento.Entity = value;
					if ((value != null))
					{
						value.eProveedor.Add(this);
						this._fkDoc = value.id;
					}
					else
					{
						this._fkDoc = default(int);
					}
					this.SendPropertyChanged("eTipoDocumento");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Compra(eCompra entity)
		{
			this.SendPropertyChanging();
			entity.eProveedor = this;
		}
		
		private void detach_Compra(eCompra entity)
		{
			this.SendPropertyChanging();
			entity.eProveedor = null;
		}
	}
}
#pragma warning restore 1591
